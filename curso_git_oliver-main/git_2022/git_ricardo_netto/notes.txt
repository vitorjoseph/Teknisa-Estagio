=========================================================================================
--- DEPOIS DO GIT INSTALADO ---
=========================================================================================




=========================================================================================
PODEMOS CONFIRMAR QUE O GIT FOI INSTALADO NO SISTEMA OPERACIONAL USANDO O COMANDO:
	-> GIT --VERSION

O RETORNO SER√Å A VERS√ÉO INSTALADA NO SISTEMA OPERACIONAL


=========================================================================================
* PARA CONFERIR ALGUNS COMANDOS DO GIT BASTA UTILIZAR:
	-> GIT

O RETORNO SER√Å UMA S√âRIE DE COMANDOS E ALGUMAS EXPLICA√á√ïES B√ÅSICAS SOBRE ELES
=========================================================================================



=========================================================================================
--- AP√ìS VISUALIZAR ESSAS INFORMA√á√ïES PASSAREMOS A INICIAR A UTILIZA√á√ÉO DAS FUNCIONALIDADES DO GIT. IREMOS SELECIONAR UMA PASTA QUALQUER, DE PREFER√äNCIA NOVA; E DENTRO DELA IREMOS CRIAR NOSSO PRIMEIRO REPOSIT√ìRIO GIT ---

* MKDIR		-> CRIAR PASTA OU ARQUIVO
* LS			-> EXIBIR CONTE√öDO DA PASTA
* CD			-> PR√âFIXO PARA ALTERAR ENTRE PASTAS
* CLEAR		-> COMANDO DE LIMPAR A TELA

* H√Å MUITOS OUTROS


=========================================================================================
--- DENTRO DA PASTA DESEJADA ---

O PRIMEIRO OBJETIVO √â INICIAR O REPOSIT√ìRIO DENTRO DESTA PASTA. PARA ISSO, VAMOS UTILIZAR O COMANDO:

	-> GIT INIT

O RETORNO SER√Å UMA INFORMA√á√ÉO DIZENDO QUE FOI INICIALIZADO UM REPOSIT√ìRIO GIT VAZIO DENTRO DO CAMINHO DA PASTA
=========================================================================================
--- PRIMEIRAS INFORMA√á√ïES ---

TODAS AS VEZES QUE QUISERMOS SABER A SITUA√á√ÉO DO NOSSO REPOSIT√ìRIO, NOS PODEMOS UTILIZAR DE UM COMANDO PARA RECEBER ESSAS INFORMA√á√ïES, O COMANDO:

	-> GIT STATUS

O RETORNO DESSE COMANDO VAI DEPENDER DA ATUAL SITUA√á√ÉO DO SEU REPOSIT√ìRIO. NESTE MOMENTO, COMO ESTAMOS INICIANDO UM REPOSIT√ìRIO NOVO, O RETORNO TRAR√Å POUCAS INFORMA√á√ïES. O RETORNO TRAR√Å O NOME DA BRANCH* E AS ALTERA√á√ïES OCORRIDAS. NO PRIMEIRO MOMENTO HAVER√Å UM AVISO DIZENDO QUE N√ÉO H√Å NADA PARA COMITAR, POR N√ÉO TER HAVIDO NENHUMA ALTERA√á√ÉO. E AINDA H√Å A SUGEST√ÉO DE CRIAR OU COPIAR ALGUM ARQUIVO E UTILIZAR OUTRO COMANDO DO GIT PARA SER RASTREADO

* VEREMOS MAIS INFORMA√á√ïES SOBRE BRANCHS MAIS PRA FRENTE, MAS PARA TER UMA BASE; BRANCH TEM A MESMA REFER√äNCIA DO QUE UMA PASTA DO WINDOWS.
=========================================================================================
PARA FINS T√âCNICOS, NESSE MOMENTO, TODOS OS SEUS ARQUIVOS S√ÉO ARQUIVOS LOCAIS, POIS ELES AINDA N√ÉO FORAM RASTREADOS PELO GIT, OS ARQUIVOS S√ì IRAM PARA O SERVIDOR NO MOMENTO DO COMIT. TODO O TRABALHO √â FEITO REMOTO E S√ì DEPOIS, ENT√ÉO, ELES V√ÉO PARA O SERVIDOR. N√ÉO H√Å CONEX√ÉO. S√ì H√Å UMA TRANSA√á√ÉO FEITA EM UM MOMENTO DEFINIDO.
=========================================================================================
--- BRANCH ---

O QUE √â UMA BRANCH?
	-> BRANCH √â UM DIRET√ìRIO, UMA PASTA, UM "CAMINHO" ONDE EST√ÉO TODOS OS SEUS ARQUIVOS. PRA EXEMPLIFICAR O MUNDO REAL, AS EMPRESAS POSSUEM MAIS DE UMA BRANCH DO MESMO PRODUTO. PODE TER UMA BRANCH DESTINADA PARA OS DESENVOLVEDORES TRABALHAREM, OUTRA BRANCH PARA QUANDO O PRODUTO FOR FINALIZADO E PRECISAR PASSAR POR TESTES E UMA OUTRA BRANCH PARA QUANDO FOR ENVIADO PARA OS CLIENTES UTILIZAREM. N√ÉO EXISTE LIMITES DE BRANCH, MAS DEVE-SE TOMAR CUIDADO PRA N√ÉO VIRAR BAGUN√áA
=========================================================================================
--- AP√ìS CRIAR OU ADICIONAR UM NOVO ARQUIVO NA SUA PASTA, VAMOS REFAZER ALGUNS PASSOS E ENTENDER AS MODIFICA√á√ïES QUE ACONTECERAM. VAMOS COME√áAR UTILIZANDO O STATUS PARA VERIFICAR QUAL A ATUAL SITUA√á√ÉO DOS ARQUIVOS.
	-> GIT STATUS

O RETORNO √â PARECIDO COM O MESMO RETORNO DO STATUS ANTERIOR, POR√âM NOVAS INFORMA√á√ïES S√ÉO MOSTRADAS. COM NOVOS ARQUIVOS NA PASTA O GIT CONSEGUE IDENTIFICAR QUE S√ÉO ARQUIVOS NOVOS. MAS ELES AINDA N√ÉO S√ÉO TRACKEADOS PELO GIT, OU SEJA, VOC√ä PODE FAZER MODIFICA√á√ïES NESSES ARQUIVOS QUE NADA DISSO SER√Å ARMAZENADO. ELES EST√ÉO NO EST√ÅGIO DE 'UNTRACKED' E AINDA N√ÉO H√Å CONTROLE DE VERS√ïES PARA ELES.

PARA QUE O GIT CONSIGA COME√áAR A TRACKEAR ESSES ARQUIVOS, √â NECESS√ÅRIO ADICIONAR OS ARQUIVOS AO GIT. E ISSO √â FEITO COM O COMANDO:
	-> GIT ADD <file> (GIT ADD .)

A PARTIR DE AGORA, SE PUXARMOS NOVAMENTE O STATUS PARA VERIFICAR OS ARQUIVOS, PERCEBEREMOS QUE AGORA, OS ARQUIVO EST√ÉO SENTRO TRACKEADOS. NO ENTANTO ELES AINDA N√ÉO EST√ÉO NO SERVIDOR. AGORA OS ARQUIVOS EST√ÉO ESPERANDO SEREM ENVIADOS. TIPO UM PR√â-ENVIO. 

CASO NESSE MOMENTO, VOC√ä PERCEBA QUE ENVIOU ARQUIVOS ERRADOS OU SIMPLEMENTE N√ÉO QUER MAIS ENVIAR O ARQUIVO, VOC√ä TEM A OP√á√ÉO DE SE UTILIZAR DE UM OUTRO COMANDO.
	-> GIT RM --CACHED <file>

E QUANDO O COMANDO FOR UTILIZADO, O ARQUIVO VOLTA PARA O PRIMEIRO EST√ÅGIO. ESSES ARQUIVO EST√ÉO NOVAMENTE NA PARTE DO 'UNTRACKED'. PROCESSO QUE PODE SER CONFIRMADO ATR√ÅVES DO STATUS.

==========================================================================================
--- GERALMENTE QUANDO ESTAMOS NO COTIDIANO DA EMPRESA N√ìS N√ÉO CRIAMOS V√ÅRIAS 'BRANCHS' PARA IR TRABALHANDO. √â MAIS COMUM N√ìS PEGARMOS ALGUNS ARQUIVOS E ADICIONAR, REMOVER OU MODIFICAR. NO NOSSO EXEMPLOS, N√ìS ESTAMOS UTILIZANDO AS DUAS NOVAS. E VALE RESSALTAR QUE H√Å OUTROS MEIOS PARA FAZER EM BRANCHS EM ANDAMENTO.
--- CONTUDO, VAMOS APROVEITAR O EXEMPLO DE CRIAR ARQUIVOS E UMA NOVA BRANCH. E O COMANDO QUE FAR√Å ESSA COMUNICA√á√ÉO √â:
	-> GIT REMOTE ADD ORIGIN <https do hub de gits>

O COMANDO √â F√ÅCIL DE ENTENDER. A PRIMEIRA PARTE DO 'REMOTE' ESTAMOS COMUNICANDO QUE √â UM HUB REMOTO. O 'ADD' VEM PARA ADICIONAR, NO CASO VOC√ä EST√Å ADICIONANDO UM HUB REMOTO DE REPOSIT√ìRIO GIT. O 'ORIGIN' √â UM NOME QUE PODE VARIAR, MAS POR PADR√ÉO ELE FOI DENOMINADO ASSIM PARA SUBSTITUIR O CONCEITO DE ORIGEM. E O LINK DO HUB CONTENDO A BRANCH PARA VERSIONAR O C√ìDIGO.
O COMANDO GIT REMOTE AINDA APRESENTA V√ÅRIAS CONFIGURA√á√ïES QUE PODEMOS FAZER COM O NOSSO PROJETO. UM DOS COMANDOS √â O:
	-> GIT REMOTE -V

O RETORNO DESSE COMANDO S√ÉO DUAS BRANCH, POR PADR√ÉO CHAMADAS DE 'ORIGIN', POR√âM A DIFEREN√áA √â QUE UM CAMINHO √â PARA FETCH E OUTRO PARA PUSH. O FETCH √â MUITO USADO PARA A RECUPERA√á√ÉO, TAMB√âM CHAMADO DE PULL. E O PUSH PARA ENVIO.

=========================================================================================
--- E √â EXATAMENTE ESSE PUSH QUE SER√Å VISTO AGORA. NESSE MOMENTO, J√Å TEMOS:
	- INICIAMOS O GIT EM UM LOCAL COM (GIT INIT)
	- INSERIMOS NOVOS ARQUIVOS
	- VERIFICAMOS O STATUS (GIT STATUS)
	- TRACKEAMOS OS ARQUIVOS (GIT ADD)
	- NOEAMOS O NOSSO COMMIT (GIT COMMIT -M 'coments')
	- RETIRAMOS ARQUIVOS (GIT RM --CACHED <file>
	- CONECTAMOS COM O SERVIDOR (GIT REMOTE ADD ORIGIN <https>

MAS AINDA N√ÉO ENVIAMOS OS ARQUIVOS. ESTES ARQUIVOS AINDA N√ÉO EST√ÉO NO SERVIDOR. O COMANDO √â:
	-> GIT PUSH

O RETORNO PODE SER UMA INFORMA√á√ÉO DO GIT DIZENDO QUE N√ÉO EXISTE UMA BRANCH MASTER. E QUE VOC√ä PRECISA DEFINIR UMA. SE ESSA FOR A MENSAGEM O COMANDO:
	-> GIT PUSH --SET-UPSTREAM ORIGIN MASTER

:IR√Å APARECER NA TELA. BASTA EXECUTAR ESSE COMANDO E DEPOIS BASTA DIGITAR USU√ÅRIO E SENHA DO HUB DE GITS. CASO APARE√áA ALGUMAS MENSAGENS AMARELAS NA TELA, √â O GIT TE DIZENDO QUE PODEM EXISTIR ARQUIVOS NO HUB QUE VOC√ä N√ÉO POSSUE NO REPOSIT√ìRIO LOCAL. H√Å DUAS ALTERNATIVAS PARA RESOLVER ESSE PROBLEMAS, UMA DELAS √â UTILIZANDO O PULL, MAS IREMOS FOCAR NA OUTRA. A OUTRA FORMA √â UTILIZAR DO FORCE PARA PODER ENVIAR OS ARQUIVOS. O COMANDO √â:
	-> GIT PUSH --SET-UPSTREAM ORIGIN MASTER -F

ESSE COMANDO IR√Å ENVIAR OS ARQUIVOS DESCONSIDERANDO O AVISO EMITIDO.

=========================================================================================
--- TODAS AS VEZES QUE VOC√ä MODIFICAR OS SEUS ARQUIVOS, VOC√ä DEVE SEGUIR AO MENOS ALGUNS PASSOS PARA VERSIONAR NOVAMENTE OS ARQUIVOS. E S√ÉO:
	- GIT ADD . (PARA ADICIONAR TODOS OS ARQUIVOS)
	- GIT COMMIT -M (PARA ADICIONAR OS COMENT√ÅRIOS)
	- GIT PUSH (PARA ENVIAR OS ARQUIVOS)

--- ESSA S√ÉO AS MAIS B√ÅSICAS PARA PODER VERSIONAR OS ARQUIVOS.

=========================================================================================
---- √â BEM FREQUENTE QUE TENHAM MAIS PESSOAS TRABALHANDO NA MESMA BRANCH QUE VOC√ä, GERALMENTE EM DIFERENTES ARQUIVOS. E PARA QUE N√ÉO HAJA PROBLEMAS DE CONFLITOS COM VERS√ïES, √â RECOMENDADO ANTES DE ENVIAR OS ARQUIVOS PARA O SERVIDOR, VERIFICAR SE OS SEUS ARQUIVOS EST√ÉO ATUALIZADOS, AT√â PORQUE OUTRAS PESSOAS PODEM ENVIAR ARQUIVOS NOVOS E/OU MODIFICADOS PARA O REPOSIT√ìRIO. O COMANDO PARA VERIFICAR ESSA ATUALIZA√á√ÉO COM OS ARQUIVOS √â:
	-> GIT PULL

S√ÉO DOIS RETORNOS ESPERADOS, UM DE QUANDO EST√Å ATUALIZADA, VIR√Å ESSA INFORMA√á√ÉO. J√Å A OUTRA, CASO SEU REPOSIT√ìRIO LOCAL ESTEJA DESATUALIZADO, O GIT IR√Å FAZER A ATUALIZA√á√ÉO DOS ARQUIVOS. E DEIXAR√Å O SEU REPOSIT√ìRIO ATUALIZADO.

=========================================================================================
--- EXISTE UMA FORMA DE PEGAR UMA BRANCH PARA PODER MODIFICAR/INCREMENTAR ARQUIVOS. MUITO USADA EM EMPRESAS POIS AS BRANCHS J√Å EXISTEM. ESSE COMANDO IR√Å FAZER UM CLONE DE TODOS OS ARQUIVOS EXISTENTES NO SERVIDOR.
	-> GIT CLONE <https do repositÛrio>

O RETORNO ESPERADO DEVE SER UMA NOVA PASTA COM O RESPOSIT”RIO CLONADO.